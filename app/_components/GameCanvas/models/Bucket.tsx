/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.14 public/models/decorations/bucket.gltf -t 
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import { MODEL } from '@/app/_constants/models';

type GLTFResult = GLTF & {
  nodes: {
    Cylinder021: THREE.Mesh;
    Cylinder021_1: THREE.Mesh;
  };
  materials: {
    ['BrownDark.051']: THREE.MeshStandardMaterial;
    ['Metal.084']: THREE.MeshStandardMaterial;
  };
};

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>;

export function Bucket(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(MODEL.decoration.bucket.modelUrl) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group rotation={[Math.PI / 2, 0, 0]}>
        <mesh
          geometry={nodes.Cylinder021.geometry}
          material={materials['BrownDark.051']}
          castShadow
        />
        <mesh
          geometry={nodes.Cylinder021_1.geometry}
          material={materials['Metal.084']}
          castShadow
        />
      </group>
    </group>
  );
}

useGLTF.preload(MODEL.decoration.bucket.modelUrl);
