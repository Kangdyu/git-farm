// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
  // directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id                   String    @id @default(cuid())
  githubId             Int       @unique
  name                 String
  githubLoginId        String    @unique
  email                String?   @unique
  avatarUrl            String
  followers            Int
  following            Int
  coins                Int
  contriPoints         Int
  buildingLevel        Int
  // comma separated string of contribution counts. ex) "1,2,0,16,0,1, ..."
  contributionCalendar String
  githubCreatedAt      DateTime
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt

  // accounts  Account[]
  farm      Farm?
  inventory Inventory?

  @@map("users")
}

model Farm {
  id     String @id @default(cuid())
  userId String @unique
  itemId String @unique

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  item Item @relation(fields: [itemId], references: [id])

  @@map("farms")
}

model Shop {
  id        String  @id @default(cuid())
  itemId    String  @unique
  isForSale Boolean

  item Item @relation(fields: [itemId], references: [id])

  @@map("shops")
}

model Inventory {
  id       String @id @default(cuid())
  userId   String @unique
  itemId   String @unique
  quantity Int

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  item Item @relation(fields: [itemId], references: [id])

  @@map("inventories")
}

enum ItemType {
  CROP
}

model Item {
  id       String   @id @default(cuid())
  name     String   @unique
  price    Int
  modelUrl String
  type     ItemType @default(CROP)

  farm      Farm?
  inventory Inventory?
  shop      Shop?

  @@map("items")
}
